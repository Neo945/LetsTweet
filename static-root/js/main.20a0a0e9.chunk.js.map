{"version":3,"sources":["tweets/ActionButton.js","tweets/Tweet.js","tweets/TweetList.js","tweets/LoadAllTweets.js","tweets/TweetComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ActionButton","props","str","display","action","charAt","toUpperCase","slice","useState","tweet","likes","setLikes","userLiked","setDidUserLiked","className","onClick","event","Tweet","id","content","TweetList","tweetinit","setTweetinit","tweets","setTweets","useEffect","newTweet","concat","length","callBack","fetch","then","res","json","data","console","log","Loadtweets","response","status","map","TweetComponent","React","setNewTweet","tweetAreaRef","createRef","method","onSubmit","preventDefault","newTweetList","unshift","current","value","type","name","ref","required","placeholder","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20a0a0e9.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nconst getCaps = (str) => str.charAt(0).toUpperCase() + str.slice(1)\r\n\r\nexport default function ActionButton(props) {\r\n  let display = getCaps(props.action)\r\n  const [likes,setLikes] = useState(props.tweet.likes)\r\n  const [userLiked,setDidUserLiked] = useState(props.tweet.likes!==0)\r\n  const handleAction = (event)=> {\r\n    // console.log(likes,props.tweet.id)\r\n    if(userLiked){\r\n      setLikes(likes - 1)\r\n      setDidUserLiked(false) \r\n    }else{\r\n      setLikes(likes + 1)\r\n      setDidUserLiked(true)\r\n    }\r\n  }\r\n  display = props.action==='like'? (likes===0 ? display :  likes + ' ' + display) : display\r\n  return (\r\n    <button \r\n      className='btn btn-outline-primary btn-sm' \r\n      onClick={handleAction}\r\n    >\r\n      {display}\r\n    </button>\r\n  )\r\n}\r\n","import React from 'react'\r\nexport default function Tweet(props){\r\n    return (\r\n      <div className='col-12 border py-3 mb-4 tweet' id={`t-${props.tweet.id}`}>\r\n          <p>{props.tweet.id}. {props.tweet.content}</p></div>\r\n    )\r\n  }\r\n  ","import React,{useState,useEffect} from 'react'\r\nimport ActionButton from './ActionButton'\r\nimport Tweet from './Tweet'\r\nimport Loadtweets from './LoadAllTweets'\r\n  \r\n  \r\nexport default function TweetList(props) {\r\n    const [tweetinit,setTweetinit] = useState([])\r\n    const [tweets,setTweets] = useState([])\r\n    useEffect(()=>{\r\n        if([...props.newTweet].concat(tweetinit).length !== tweets.length){\r\n            setTweets([...props.newTweet].concat(tweetinit))\r\n        }\r\n    },[props.newTweet,tweets,tweetinit])\r\n\r\n    useEffect(()=>{\r\n      const callBack = (response,status)=>{\r\n        if (status === 200){\r\n            setTweetinit(response)\r\n        }\r\n      }\r\n      Loadtweets(callBack)\r\n    },[])\r\n  \r\n    return (\r\n      <div className=\"root\">\r\n          {tweets.map(\r\n            (tweet)=>{\r\n              return (<div key={`buttonSet-${tweet.id}`}>\r\n                <Tweet tweet={tweet} />\r\n                <ActionButton tweet={tweet} action='like' />\r\n                <ActionButton tweet={tweet} action='retweet'/>\r\n              </div>)\r\n          }\r\n            )}\r\n      </div>\r\n    );\r\n  }","export default function Loadtweets(callBack){\r\n    fetch('http://localhost:8000/tweets').then(res => res.json()).then(data => {\r\n      console.log(data)\r\n      callBack(data,200)\r\n    })\r\n  }\r\n","import React from 'react'\r\nimport TweetList from './TweetList'\r\nexport default function TweetComponent(props){\r\n    const [newTweet,setNewTweet] = React.useState([])\r\n    const tweetAreaRef = React.createRef()\r\n    const onSubmitClicked = (event)=>{\r\n      event.preventDefault()\r\n      let newTweetList = [...newTweet]\r\n      newTweetList.unshift({\r\n        content: tweetAreaRef.current.value,\r\n        likes: 0,\r\n        id: 1234,\r\n      })\r\n      setNewTweet(newTweetList)\r\n      tweetAreaRef.current.value = null\r\n    }\r\n    return (\r\n    <div className=\"row mb-3\">\r\n      <div className=\"col-md-4 mx-auto col-10\">\r\n        <form method=\"POST\" onSubmit={onSubmitClicked} className=\"form\" id=\"tweet-form\">\r\n          <input type=\"hidden\" value=\"/\" name=\"next\"/>\r\n            <textarea ref={tweetAreaRef} required={true} className=\"form-control\" name=\"content\" id=\"clear\" placeholder=\"Your Tweet\"></textarea>\r\n          <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\r\n        </form>\r\n    </div>\r\n    <TweetList newTweet={newTweet}/>\r\n  </div>\r\n  \r\n  )\r\n  }\r\n  ","// import './App.css';\nimport React from 'react'\nimport TweetComponent from './tweets/TweetComponent'\n\n\nfunction App(props){\n  return (\n    <TweetComponent />\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}